// Code generated by mockery v2.20.0. DO NOT EDIT.

package doguConf

import (
	core "github.com/cloudogu/cesapp-lib/core"
	mock "github.com/stretchr/testify/mock"
)

// mockEntryValidatorCreator is an autogenerated mock type for the entryValidatorCreator type
type mockEntryValidatorCreator struct {
	mock.Mock
}

type mockEntryValidatorCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *mockEntryValidatorCreator) EXPECT() *mockEntryValidatorCreator_Expecter {
	return &mockEntryValidatorCreator_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: descriptor
func (_m *mockEntryValidatorCreator) Execute(descriptor core.ValidationDescriptor) EntryValidator {
	ret := _m.Called(descriptor)

	var r0 EntryValidator
	if rf, ok := ret.Get(0).(func(core.ValidationDescriptor) EntryValidator); ok {
		r0 = rf(descriptor)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EntryValidator)
		}
	}

	return r0
}

// mockEntryValidatorCreator_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type mockEntryValidatorCreator_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//  - descriptor core.ValidationDescriptor
func (_e *mockEntryValidatorCreator_Expecter) Execute(descriptor interface{}) *mockEntryValidatorCreator_Execute_Call {
	return &mockEntryValidatorCreator_Execute_Call{Call: _e.mock.On("Execute", descriptor)}
}

func (_c *mockEntryValidatorCreator_Execute_Call) Run(run func(descriptor core.ValidationDescriptor)) *mockEntryValidatorCreator_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(core.ValidationDescriptor))
	})
	return _c
}

func (_c *mockEntryValidatorCreator_Execute_Call) Return(_a0 EntryValidator) *mockEntryValidatorCreator_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockEntryValidatorCreator_Execute_Call) RunAndReturn(run func(core.ValidationDescriptor) EntryValidator) *mockEntryValidatorCreator_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockEntryValidatorCreator interface {
	mock.TestingT
	Cleanup(func())
}

// newMockEntryValidatorCreator creates a new instance of mockEntryValidatorCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockEntryValidatorCreator(t mockConstructorTestingTnewMockEntryValidatorCreator) *mockEntryValidatorCreator {
	mock := &mockEntryValidatorCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
