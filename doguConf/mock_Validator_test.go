// Code generated by mockery v2.20.0. DO NOT EDIT.

package doguConf

import (
	core "github.com/cloudogu/cesapp-lib/core"
	mock "github.com/stretchr/testify/mock"
)

// MockValidator is an autogenerated mock type for the Validator type
type MockValidator struct {
	mock.Mock
}

type MockValidator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockValidator) EXPECT() *MockValidator_Expecter {
	return &MockValidator_Expecter{mock: &_m.Mock}
}

// Check provides a mock function with given fields: _a0
func (_m *MockValidator) Check(_a0 core.ConfigurationField) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(core.ConfigurationField) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockValidator_Check_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Check'
type MockValidator_Check_Call struct {
	*mock.Call
}

// Check is a helper method to define mock.On call
//  - _a0 core.ConfigurationField
func (_e *MockValidator_Expecter) Check(_a0 interface{}) *MockValidator_Check_Call {
	return &MockValidator_Check_Call{Call: _e.mock.On("Check", _a0)}
}

func (_c *MockValidator_Check_Call) Run(run func(_a0 core.ConfigurationField)) *MockValidator_Check_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(core.ConfigurationField))
	})
	return _c
}

func (_c *MockValidator_Check_Call) Return(_a0 error) *MockValidator_Check_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockValidator_Check_Call) RunAndReturn(run func(core.ConfigurationField) error) *MockValidator_Check_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockValidator creates a new instance of MockValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockValidator(t mockConstructorTestingTNewMockValidator) *MockValidator {
	mock := &MockValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
