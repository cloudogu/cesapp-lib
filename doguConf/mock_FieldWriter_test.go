// Code generated by mockery v2.20.0. DO NOT EDIT.

package doguConf

import (
	core "github.com/cloudogu/cesapp-lib/core"
	mock "github.com/stretchr/testify/mock"
)

// MockFieldWriter is an autogenerated mock type for the FieldWriter type
type MockFieldWriter struct {
	mock.Mock
}

type MockFieldWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFieldWriter) EXPECT() *MockFieldWriter_Expecter {
	return &MockFieldWriter_Expecter{mock: &_m.Mock}
}

// Print provides a mock function with given fields: field, currentValue
func (_m *MockFieldWriter) Print(field core.ConfigurationField, currentValue string) error {
	ret := _m.Called(field, currentValue)

	var r0 error
	if rf, ok := ret.Get(0).(func(core.ConfigurationField, string) error); ok {
		r0 = rf(field, currentValue)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockFieldWriter_Print_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Print'
type MockFieldWriter_Print_Call struct {
	*mock.Call
}

// Print is a helper method to define mock.On call
//  - field core.ConfigurationField
//  - currentValue string
func (_e *MockFieldWriter_Expecter) Print(field interface{}, currentValue interface{}) *MockFieldWriter_Print_Call {
	return &MockFieldWriter_Print_Call{Call: _e.mock.On("Print", field, currentValue)}
}

func (_c *MockFieldWriter_Print_Call) Run(run func(field core.ConfigurationField, currentValue string)) *MockFieldWriter_Print_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(core.ConfigurationField), args[1].(string))
	})
	return _c
}

func (_c *MockFieldWriter_Print_Call) Return(_a0 error) *MockFieldWriter_Print_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFieldWriter_Print_Call) RunAndReturn(run func(core.ConfigurationField, string) error) *MockFieldWriter_Print_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockFieldWriter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockFieldWriter creates a new instance of MockFieldWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockFieldWriter(t mockConstructorTestingTNewMockFieldWriter) *MockFieldWriter {
	mock := &MockFieldWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
